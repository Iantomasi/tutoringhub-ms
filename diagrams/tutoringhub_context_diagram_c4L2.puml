@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons


AddElementTag("microservice", $shape=EightSidedShape(), $bgColor="CornflowerBlue", $fontColor="white", $legendText="Micro Service\neight sided")
AddElementTag("database", $shape=RoundedBoxShape(), $bgColor="grey", $fontColor="white", $legendText="Databases")
AddElementTag("website", $shape=RoundedBoxShape(), $bgColor="royalblue", $fontColor="white", $legendText="Single-Page Application")
AddElementTag("webapp", $shape=RoundedBoxShape(), $bgColor="blue", $fontColor="white", $legendText="Web Application")
AddRelTag("api_rel", $lineColor="black",$legendText="API-Gateway relationships")
AddRelTag("database_rel", $lineColor="black",$legendText="Database Relationships")
AddRelTag("microservice_rel", $lineColor="black",$legendText="Microservice Relationships")

SHOW_PERSON_OUTLINE()

Person(client, "employee", "A front office employee of the school that is handling tutoring lesson scheduling and confirmations.")


System_Boundary(tutoringhub_boundedcontext, "Tutoringhub System") {
Container(application, "Wep Application", "Spring boot: Java", "Delivers requested data in a single page application format", $tags="webapp")
Container(webPage, "Single-Page Application", "REACT JS", "GUI interface composed of functionalities pertaining to the Spring boot application", $tags="website")

Container(api_gateway, "API Gateway", "Spring boot: Java", "Handles HTTP requests and redirects them accordingly to the desired microservice.", $tags="microservice")

Container(lessons_service, "Lessons-Service","Spring boot: Java","Provides functionality for managing lesson",$tags="microservice")
ContainerDb(lessons_db, "Lessons-db","MySQL","Stores lesson information", $tags="database")

Container(students_service, "Students-Service","Spring boot: Java","Provides functionality for managing student", $tags="microservice")
ContainerDb(students_db, "Students-db","MySQL","Stores student information", $tags="database")

Container(tutors_service, "Tutors-Service","Spring boot: Java","Provides functionality for managing tutor", $tags="microservice")
ContainerDb(tutors_db, "Tutors-db","MySQL","Stores tutor information", $tags="database")

Container(supervisor_confirmation_service, "SupervisorConfirmation-Service","Spring boot: Java","Provides functionality for managing supervisor confirmation",$tags="microservice")
ContainerDb(supervisor_confirmation_db, "SupervisorConfirmation-db","MongoDB","Stores supervisor confirmation information", $tags="database")

}


Rel(client, application, "Visits tutoringhub.ca using", "HTTP")
Rel(client, webPage,"Retrieves information pertaining to the service via GUI")

Rel_R(application, webPage,"Sends data to the client web page (spa)")

Rel(webPage,api_gateway,"Makes API calls to","JSON/HTTP")


Rel_D(api_gateway,lessons_service,"Sends request to","JSON/HTTPS",$tags="api_rel")
Rel_D(api_gateway,students_service,"Sends request to","JSON/HTTPS",$tags="api_rel")
Rel_D(api_gateway,tutors_service,"Sends request to","JSON/HTTPS",$tags="api_rel")
Rel_D(api_gateway,supervisor_confirmation_service,"Sends request to","JSON/HTTPS",$tags="api_rel")

Rel(students_service, students_db,"Reads from and Writes to","JDBC", $tags="database_rel")

Rel(tutors_service,tutors_db,"Reads from and Writes to","JDBC", $tags="database_rel")


Rel(lessons_service,lessons_db,"Reads from and Writes to","JDBC", $tags="database_rel")

Rel(supervisor_confirmation_service, students_service, "Sends request to/Receives response from", "JSON/HTTPS", $tags="microservice_rel")
Rel(supervisor_confirmation_service, tutors_service, "Sends request to/Receives response from", "JSON/HTTPS", $tags="microservice_rel")
Rel(supervisor_confirmation_service, lessons_service, "Sends request to/Receives response from", "JSON/HTTPS", $tags="microservice_rel")

Rel(supervisor_confirmation_service, supervisor_confirmation_db,"Reads from and Writes to","JDBC", $tags="database_rel")


SHOW_LEGEND()

@enduml